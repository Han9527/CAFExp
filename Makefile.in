# compilers and flags
CC=@CXX@
CXX=@CXX@
LD=@CXX@


CFLAGS = -std=c++11 -I. -O3 @OPENMP_CXXFLAGS@
LINKER = $(LD) -std=c++11 -O3 @OPENMP_CXXFLAGS@ -o
LFLAGS = -I.

# directories
SRCDIR = src
OBJDIR = obj
BINDIR = bin

# our program
TARGET = cafexp

# Default build
all: prep release

release: $(BINDIR)/$(TARGET)


SOURCES := $(wildcard $(SRCDIR)/*.cpp)
#INCLUDES := $(wildcard $(SRCDIR)/*.h)
OBJECTS := $(SOURCES:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)
rm = rm -f

$(BINDIR)/$(TARGET): $(OBJECTS) $(OBJDIR)/main.o
	$(LINKER) $@ $(LFLAGS) $(OBJECTS) $(OBJDIR)/main.o @LIBS@ 
	@echo "Linking complete!"

$(OBJECTS): $(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(CFLAGS) -c $< -o $@
	@echo "Compiled "$<" successfully!"

$(OBJDIR)/main.o: main.cpp
	$(CC) $(CFLAGS) -c $< -o $@
	@echo "Compiled "$<" successfully!"

$(OBJDIR)/test.o: test.cpp
	$(CC) $(CFLAGS) -c $< -o $@
	@echo "Compiled "$<" successfully!"

.PHONY: clean
clean:
	$(rm) $(OBJECTS) $(OBJDIR)/main.o
	@echo "Cleanup complete!"

.PHONY: remove
remove: clean
	@$(rm) $(BINDIR)/$(TARGET)
	@echo "Executable removed!"

#
# Debug build settings
#
DBGDIR = debug
DBG_OBJECTS := $(SOURCES:$(SRCDIR)/%.cpp=$(DBGDIR)/%.o)
DBG_CFLAGS = -std=c++11 -Wall -Werror @OPENMP_CXXFLAGS@ -g -I. -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC
DBG_LINKER = $(LD) -std=c++11 @OPENMP_CXXFLAGS@ -o

$(DBG_OBJECTS): $(DBGDIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(DBG_CFLAGS) -c $< -o $@

$(DBGDIR)/main.o: main.cpp
	$(CC) $(DBG_CFLAGS) -c $< -o $@

$(DBGDIR)/$(TARGET): $(DBG_OBJECTS) $(DBGDIR)/main.o
	$(DBG_LINKER) $@ $(LFLAGS) $(DBG_OBJECTS) $(DBGDIR)/main.o @LIBS@

.PHONY: debug
debug: $(DBGDIR)/$(TARGET)

TESTDIR = test
TEST_TARGET = runtests
TEST_OBJECTS := $(SOURCES:$(SRCDIR)/%.cpp=$(TESTDIR)/%.o)
$(TEST_OBJECTS): $(TESTDIR)/%.o: $(SRCDIR)/%.cpp
	$(CC) $(DBG_CFLAGS) -DSILENT -c $< -o $@

$(TESTDIR)/test.o: test.cpp
	$(CC) $(DBG_CFLAGS) -c $< -o $@

TESTLIBS=-lCppUTest -lCppUTestExt
$(TESTDIR)/$(TEST_TARGET): $(TEST_OBJECTS) $(TESTDIR)/test.o
	$(LINKER) $@ $(LFLAGS) $(TEST_OBJECTS) $(TESTDIR)/test.o $(TESTLIBS)
	@echo "Test linking complete!"

.PHONY: test
test: $(TESTDIR)/$(TEST_TARGET)

prep:
	@mkdir -p $(OBJDIR) $(BINDIR) $(TESTDIR)

.PHONY: docs
docs:
	$(MAKE) -C docs

